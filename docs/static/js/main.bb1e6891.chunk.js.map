{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","props","categories","propTypes","PropTypes","func","isRequired","ReactDOM","render","document","getElementById"],"mappings":"iPAGaA,EAAc,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,cAAmB,EAETC,mBAAS,IAFA,mBAEtCC,EAFsC,KAE1BC,EAF0B,KAoB7C,OACI,0BAAMC,SAXW,SAACC,GAClBA,EAAEC,iBACGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,OAQd,2BACIO,KAAK,OACLC,MAAST,EACTU,SApBc,SAACP,GAEvBF,EAAcE,EAAEQ,OAAOF,Y,uCCTlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,+DAGAI,MAAQF,GAHR,cAGbG,EAHa,gBAICA,EAAKC,OAJN,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAGQ,EAAIG,cAAP,aAAG,EAAYC,iBAAiBZ,QAVxB,kBAgBZM,GAhBY,4CAAH,sDCCPO,EAAc,SAAC,GAAqB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAGlC,OACI,yBAAKc,UAAU,0CACX,yBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,+BAAKA,EAAL,OCHCO,EAAU,SAAC,GAAkB,IAAfnB,EAAc,EAAdA,SAAc,ECCb,SAAEA,GAAc,IAAD,EAEbd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJ0B,mBAEhCC,EAFgC,KAEzBC,EAFyB,KA8BvC,OAvBAC,qBAAU,WAENxB,EAASC,GACJwB,MAAM,SAAAC,GAEHH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAIvB,CAACpB,IAYIqB,ED5ByBK,CAAc1B,GAAjCa,EAHwB,EAG9BN,KAAca,EAHgB,EAGhBA,QAIrB,OACI,oCACI,wBAAIJ,UAAU,qCAAd,IAAoDhB,GAElDoB,GAAW,uBAAGJ,UAAU,oCAAb,WACb,yBAAKA,UAAU,aAIHH,EAAOJ,KAAK,SAAAC,GAAG,OACX,kBAAC,EAAD,eACIiB,IAAKjB,EAAIC,IACLD,UElBvBkB,EAAe,SAAAC,GAAS,MAGG3C,mBAAS,CAAC,cAHb,mBAG1B4C,EAH0B,KAGd7C,EAHc,KAUjC,OACI,oCACI,4CACA,kBAAC,EAAD,CAAaA,cAAgBA,IAC7B,6BAGA,4BAEQ6C,EAAWrB,KAAK,SAAAT,GAAQ,OACpB,kBAAC,EAAD,CACI2B,IAAO3B,EACPA,SAAYA,UASxChB,EAAY+C,UAAU,CAClB9C,cAAe+C,IAAUC,KAAKC,YChClCC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.bb1e6891.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\n\r\nexport const AddCategory = ({ setCategories}) => {\r\n    \r\n    const [inputValue, setInputValue] = useState(''); // undefined\r\n\r\n\r\n    const handleInputChange = (e) => {\r\n        // console.log(e.target.value);\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if ( inputValue.trim().length > 2){\r\n            setCategories( cats => [inputValue, ...cats]);\r\n            setInputValue('');\r\n        }\r\n        // console.log('submit hecho')\r\n        \r\n    }\r\n    \r\n    return (\r\n        <form onSubmit= {handleSubmit}>\r\n            <input \r\n                type=\"text\"\r\n                value= { inputValue }\r\n                onChange= { handleInputChange }\r\n\r\n            />\r\n        </form>\r\n    )\r\n}\r\n","\r\nexport const getGifs = async(category) => {\r\n\r\n    const url =`https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category)}&limit=10&api_key=Jh82f614Kgu1LqDInebJacl5WJlgBoGx`;\r\n    const resp = await fetch ( url );\r\n    const {data}= await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url : img.images?.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    // console.log(gifs);\r\n    // setImages( gifs);\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( { title, url} ) => {\r\n\r\n    \r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={ url } alt= {title} />\r\n            <p> {title} </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\n\r\nexport const GifGrid = ( { category}) => {\r\n\r\n    \r\n    const {data: images, loading} = useFetchGifs( category);\r\n    \r\n\r\n    // getGifs();\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\"> {category}</h3>\r\n\r\n            { loading && <p className=\"animate__animated animate__flash\">loading</p> }\r\n            <div className=\"card-grid\">\r\n                \r\n                \r\n                    {\r\n                        images.map( img => (\r\n                            <GifGridItem \r\n                                key={img.id}\r\n                                {...img}\r\n                            />\r\n                        ))\r\n                    }\r\n                \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","// import React from 'react'\r\n\r\nimport { useState, useEffect } from \"react\"\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\n\r\nexport const useFetchGifs = ( category) => {\r\n   \r\n    const [state, setstate] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n        getGifs( category )\r\n            .then( imgs => {\r\n                 \r\n                setstate({\r\n                    data: imgs,\r\n                    loading: false\r\n                })\r\n            }) \r\n\r\n    },[category])\r\n        // useEffect( () => {\r\n    //     getGifs( category )\r\n    //         .then( setImages);\r\n    // }, [ category])\r\n\r\n    // setTimeout(() => {\r\n    //     setstate({\r\n    //         data: [1,2,3,4,5,6,7],\r\n    //         loading: false\r\n    //     })\r\n    // }, 3000);\r\n    return state; // { data: [], loading: true}\r\n}\r\n","import React, {useState} from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport PropTypes from 'prop-types';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\nexport const GifExpertApp = props => {\r\n\r\n    // const categories= ['One Punch', 'Samurai X', 'Dragon Ball'];\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n\r\n    // const handleAdd = () => {\r\n    //     setCategories( cats => [...cats, 'HunterXHunter']);\r\n\r\n    // }\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategories }/>\r\n            <hr />\r\n\r\n            {/* <button onClick={handleAdd}>Agregar</button> */}\r\n            <ol>\r\n                { \r\n                    categories.map( category => (\r\n                        <GifGrid \r\n                            key = {category}\r\n                            category= { category } />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nAddCategory.propTypes={\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifExpertApp } from './GifExpertApp';\n\n\nReactDOM.render(\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}